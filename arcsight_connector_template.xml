<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2016-12-05T21:37:01Z</date>
    <groups>
        <group>
            <name>Appliances</name>
        </group>
        <group>
            <name>Connectors</name>
        </group>
        <group>
            <name>Linux servers</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Connector</template>
            <name>Connector</name>
            <description/>
            <groups>
                <group>
                    <name>Appliances</name>
                </group>
                <group>
                    <name>Connectors</name>
                </group>
                <group>
                    <name>Linux servers</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Container1</name>
                </application>
                <application>
                    <name>Container2</name>
                </application>
                <application>
                    <name>Container3</name>
                </application>
                <application>
                    <name>Container4</name>
                </application>
                <application>
                    <name>Container5</name>
                </application>
                <application>
                    <name>Container6</name>
                </application>
                <application>
                    <name>Container7</name>
                </application>
                <application>
                    <name>Container8</name>
                </application>
                <application>
                    <name>REPORTS</name>
                </application>
                <application>
                    <name>SERVICES</name>
                </application>
                <application>
                    <name>Total EPS</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Agent Prototypes SLA Status</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>agent.prototype.sla</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This item is used to mirror the status of all the item prototypes related to the agent that we would liket to include in the SLA calculation.&#13;
&#13;
A static trigger is required for the IT Services calculation, leaving us with the need to create this static trigger to mirror the status of the SLA trigger prototype.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Appliance EPS In</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>appliance_eps_in</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Provides us with the total EPS for this appliance. This value is calculated roughly every 3 minutes.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Daily Appliance CPU Use</name>
                    <type>15</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>calculated_appliance_cpu</key>
                    <delay>86400</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params>avg(&quot;system.cpu.util[,,avg1]&quot;,24h)</params>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Gives us the 24hour average of the total appliance CPU usage.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Daily Appliance EPS</name>
                    <type>15</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>calculated_appliance_eps</key>
                    <delay>86400</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params>avg(appliance_eps_in,24h)</params>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Gives us the 24hour average of the total appliance EPS.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 1 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[1]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 2 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[2]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 3 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[3]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 4 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[4]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 5 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[5]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 6 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[6]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 7 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[7]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>container 8 eps</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>conn_eps_in.[8]</key>
                    <delay>0</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>REPORTS</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-1]: JVM Memory Usage</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_1.jvm.mem</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Notes the memory usage for the JVM associated with this particular container.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Container1</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-1]: Process Count</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_1.process_count</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the output of the count of processes for this container.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Container1</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-1]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_1.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Container1</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-2]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_2.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-3]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_3.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-4]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_4.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-5]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_5.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-6]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_6.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-7]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_7.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>[C-8]: State</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>c_8.state</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This is the current state of the container as per the python script. &#13;
&#13;
UP: Tells us that the container is up, being actively monitored and is reporting stats. &#13;
&#13;
MONITOR: Indicates that, while being polled for stats, the container did not report anything for it's EPS or it was 0. It is now being monitored for 5 minutes. &#13;
&#13;
if the EPS comes off of 0, then it is set back to UP state, else at the end of 5 minutes, we set it to the down state and attempt a restart.&#13;
&#13;
DOWN: In this state, the container has a restart attempted on it by the script. If that works and the EPS is back after the restart UP and resume normal monitoring. Else, report that it is DOWN to the team and await human intervention on that container.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Destination Prototypes SLA Status</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>destination.prototype.sla</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This item is used to mirror the status of all the item prototypes related to destinations that we would liket to include in the SLA calculation.&#13;
&#13;
A static trigger is required for the IT Services calculation, leaving us with the need to create this static trigger to mirror the status of the SLA trigger prototype.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>ICMP ping</name>
                    <type>3</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>icmpping</key>
                    <delay>60</delay>
                    <history>7</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <logtimefmt/>
                </item>
                <item>
                    <name>SLA Kill Switch</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>kill_switch</key>
                    <delay>0</delay>
                    <history>7</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Used to track if the SLA override for this node should be on or not.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn1</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[1]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn2</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[2]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn3</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[3]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn4</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[4]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn5</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[5]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn6</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[6]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn7</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[7]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Prototype SLA Conn8</name>
                    <type>2</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>prototype_sla[8]</key>
                    <delay>0</delay>
                    <history>1825</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Agent Discovery</name>
                    <type>2</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>agent_discovery</key>
                    <delay>0</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>0</lifetime>
                    <description>Allows us to discover agents automatically for any connector. &#13;
&#13;
It also creates the Item prototypes and trigger prototypes for any given set of agents.&#13;
&#13;
This rule is populated by reading the agent.properties file.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Agent $1 | Queue Drop Count</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>drop.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 Container $2| EPS</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>eps.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 | JVM Memory Usage</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>mem.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 | Queue Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>queue_rate.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>This is the rate at which the agent queues events into its buffer, before they are parsed.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 | Active Thread Count</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>threads.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 | Type</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>type.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Agent $1 | Version</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>version.[{#AGENT}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>({TRIGGER.VALUE}=0 and {Connector:drop.[{#AGENT}, {#ID}].last()}&gt;0) or ({TRIGGER.VALUE}=1 and {Connector:drop.[{#AGENT}, {#ID}].sum(#15)}&gt;0)</expression>
                            <name>Conn[{#ID}] Agent[{#AGENT}] is Dropping Events.</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>This agent is  currently dropping events from its queue.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>({TRIGGER.VALUE}=0 and {Connector:eps.[{#AGENT}, {#ID}].sum(60m)}=0) or ({TRIGGER.VALUE}=1 and {Connector:eps.[{#AGENT}, {#ID}].count(#15, 0)}=0)</expression>
                            <name>EPS Reported as 0 for &lt; 1 hour.</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Destination Discovery</name>
                    <type>2</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>destination_discovery</key>
                    <delay>0</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>0</lifetime>
                    <description>Allows us to automatically discover the destinations for a given container.&#13;
&#13;
Here againg, a JSON formatted read of the agent.properties file is sent to this discovery rule.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>[Destination: $1] | Cache Size</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cache[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[Destination: $1] | Drop Count</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>drop[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[Destination: $1] | Event Transport Status</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>et[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[Destination: $1] | Health Transport Status</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ht[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[Destination: $1] | Connection Status</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>status[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>[Destination: $1] | Throughput</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>throughput[{#DESTINATION}, {#ID}]</key>
                            <delay>0</delay>
                            <history>7</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>container_{#ID}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Connector:cache[{#DESTINATION}, {#ID}].avg(360m)}&gt;50000</expression>
                            <name>Conn[{#ID}] Agents Caching Towards [{#DESTINATION}]</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>if the average caching value over the last 6 hours is greater than 10000</description>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Container[{#ID}] No data on [{#DESTINATION} For &gt; 15mins</name>
                                    <expression>{Connector:throughput[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:drop[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:status[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:cache[{#DESTINATION}, {#ID}].nodata(15m)}=1</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>({TRIGGER.VALUE}=0 and {Connector:status[{#DESTINATION}, {#ID}].count(#3,&quot;Down&quot;,&quot;eq&quot;)}=3) or ({TRIGGER.VALUE}=1 and {Connector:status[{#DESTINATION}, {#ID}].count(#5,&quot;Down&quot;,&quot;eq&quot;)}&gt;0)</expression>
                            <name>Conn{#ID} Connection Down to {#DESTINATION}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Connector:throughput[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:drop[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:status[{#DESTINATION}, {#ID}].nodata(15m)}=1 or&#13;
{Connector:cache[{#DESTINATION}, {#ID}].nodata(15m)}=1</expression>
                            <name>Container[{#ID}] No data on [{#DESTINATION} For &gt; 15mins</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Alerts us that one of the trapper items related to destinations has not received data in over 10 mintues.</description>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$CONTAINER01}</macro>
                    <value>Connector:c_1.state</value>
                </macro>
            </macros>
            <templates>
                <template>
                    <name>Template App Zabbix Agent</name>
                </template>
            </templates>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:appliance_eps_in.count(#15,5000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:appliance_eps_in.count(#15,5000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Applinace EPS &gt; 5k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description>Alerts us that the sum of all agent EPS for this appliance is greater than 5000eps for the last 15 checks. (~15mins)</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_1.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_1.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_1.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector01 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector01 Down</name>
                    <expression>{Connector:c_1.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector01 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=0) or ({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_1.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector01 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector01 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=0) or ({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=0) or ({Connector:c_1.state.nodata(30m)}=1 and {Connector:c_1.state.str(EMPTY)}=1)</expression>
            <name>Connector01 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[1].last()}&gt;0) or ({Connector:c_1.state.count(#5,DOWN,eq)} = 5) or ({Connector:c_1.state.count(#5,UP,eq)}=0 and {Connector:c_1.state.count(#5,EMPTY,eq)}=0 and {Connector:c_1.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[1].last()}&gt;0) or (({Connector:c_1.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_1.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector01 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_2.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_2.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_2.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector02 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector02 Down</name>
                    <expression>{Connector:c_2.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector02 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=0) or ({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_2.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector02 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector02 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=0) or ({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=0) or ({Connector:c_2.state.nodata(30m)}=1 and {Connector:c_2.state.str(EMPTY)}=1)</expression>
            <name>Connector02 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[2].last()}&gt;0) or ({Connector:c_2.state.count(#5,DOWN,eq)} = 5) or ({Connector:c_2.state.count(#5,UP,eq)}=0 and {Connector:c_2.state.count(#5,EMPTY,eq)}=0 and {Connector:c_2.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[2].last()}&gt;0) or (({Connector:c_2.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_2.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector02 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_3.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_3.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_3.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector03 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector03 Down</name>
                    <expression>{Connector:c_3.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector03 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=0) or ({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_3.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector03 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector03 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=0) or ({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=0) or ({Connector:c_3.state.nodata(30m)}=1 and {Connector:c_3.state.str(EMPTY)}=1)</expression>
            <name>Connector03 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and ({Connector:c_3.state.count(#5,EMPTY,eq)}=0) and (({Connector:prototype_sla[3].last()}&gt;0) or ({Connector:c_3.state.count(#5,DOWN,eq)} = 5) or ({Connector:c_3.state.count(#5,UP,eq)}=0 and {Connector:c_3.state.count(#3,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and  ({Connector:c_3.state.count(#5,EMPTY,&quot;eq&quot;)}=0) and (({Connector:prototype_sla[3].last()}&gt;0) or (({Connector:c_3.state.count(#5,UP,eq)} &lt; 5))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector03 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_4.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_4.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_4.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector04 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector04 Down</name>
                    <expression>{Connector:c_4.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector04 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=0) or ({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_4.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector04 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector04 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=0) or ({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=0) or ({Connector:c_4.state.nodata(30m)}=1 and {Connector:c_4.state.str(EMPTY)}=1)</expression>
            <name>Connector04 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[4].last()}&gt;0) or ({Connector:c_4.state.count(#5,DOWN,eq)} = 5) or ({Connector:c_4.state.count(#5,UP,eq)}=0 and {Connector:c_4.state.count(#5,EMPTY,eq)}=0 and {Connector:c_4.state.count(#3,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[4].last()}&gt;0) or (({Connector:c_4.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_4.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector04 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_5.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_5.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_5.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector05 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector05 Down</name>
                    <expression>{Connector:c_5.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector05 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=0) or ({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_5.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector05 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector05 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=0) or ({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=0) or ({Connector:c_5.state.nodata(30m)}=1 and {Connector:c_5.state.str(EMPTY)}=1)</expression>
            <name>Connector05 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[5].last()}&gt;0) or ({Connector:c_5.state.count(#5,DOWN,eq)} = 5) or ({Connector:c_5.state.count(#5,UP,eq)}=0 and {Connector:c_5.state.count(#5,EMPTY,eq)}=0 and {Connector:c_5.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[5].last()}&gt;0) or (({Connector:c_5.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_5.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector05 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_6.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_6.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_6.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector06 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector06 Down</name>
                    <expression>{Connector:c_6.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector06 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=0) or ({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_6.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector06 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector06 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=0) or ({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=0) or ({Connector:c_6.state.nodata(30m)}=1 and {Connector:c_6.state.str(EMPTY)}=1)</expression>
            <name>Connector06 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[6].last()}&gt;0) or ({Connector:c_6.state.count(#5,DOWN,eq)} = 3) or ({Connector:c_6.state.count(#5,UP,eq)}=0 and {Connector:c_6.state.count(#5,EMPTY,eq)}=0 and {Connector:c_6.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[6].last()}&gt;0) or (({Connector:c_6.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_6.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector06 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_7.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_7.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_7.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector07 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector07 Down</name>
                    <expression>{Connector:c_7.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector07 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=0) or ({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_7.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector07 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector07 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=0) or ({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=0) or ({Connector:c_7.state.nodata(30m)}=1 and {Connector:c_7.state.str(EMPTY)}=1)</expression>
            <name>Connector07 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[7].last()}&gt;0) or ({Connector:c_7.state.count(#5,DOWN,eq)} = 3) or ({Connector:c_7.state.count(#5,UP,eq)}=0 and {Connector:c_7.state.count(#5,EMPTY,eq)}=0 and {Connector:c_7.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[7].last()}&gt;0) or (({Connector:c_7.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_7.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector07 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_8.state.count(#3,UP,&quot;eq&quot;)}=0 and {Connector:c_8.state.count(#3,EMPTY,&quot;eq&quot;)}=0 and {Connector:c_8.state.count(#3,Could-not-get-state,&quot;eq&quot;)}=0)</expression>
            <name>Connector08 Agents Not Running</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Used for tracking the service levels of our connectors. Indicates that the &quot;agentup&quot; script reported that the agent was not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector08 Down</name>
                    <expression>{Connector:c_8.state.count(#3,DOWN,eq)} = 3</expression>
                </dependency>
                <dependency>
                    <name>Connector08 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=0) or ({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:c_8.state.count(#3,DOWN,eq)} = 3</expression>
            <name>Connector08 Down</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Indicates that this connector agent has stopped running. The bot has tried to restart the connector. It has also tried to stop/start the connector. &#13;
&#13;
Might be an old PID file that needs to be deleted or someone may be working on the appliance.&#13;
&#13;
This trigger hits only if the last three statuses returned were DOWN.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Connector08 No Agent Data for &gt; 30mins.</name>
                    <expression>({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=0) or ({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=1)</expression>
                </dependency>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=0) or ({Connector:c_8.state.nodata(30m)}=1 and {Connector:c_8.state.str(EMPTY)}=1)</expression>
            <name>Connector08 No Agent Data for &gt; 30mins.</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Alert that the python script that collects agent data may not be functioning. We have gone 5 minutes with no update to the state of the container.&#13;
&#13;
The check will wait up to 10 minutes for the no data threshold as we check the state of an empty container much less frequently.&#13;
&#13;
This would also indicate that no stats have been flowing in for EPS, Drop Count, etc...</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
                <dependency>
                    <name>Zabbix agent on {HOST.NAME} is unreachable for 5 minutes</name>
                    <expression>{Connector:agent.ping.nodata(5m)}=1</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[8].last()}&gt;0) or ({Connector:c_8.state.count(#5,DOWN,eq)} = 3) or ({Connector:c_8.state.count(#5,UP,eq)}=0 and {Connector:c_8.state.count(#5,EMPTY,eq)}=0 and {Connector:c_8.state.count(#5,Could-not-get-state,eq)}=0) or ({Connector:agent.ping.nodata(5m)}=1))) or ({TRIGGER.VALUE}=1 and ({Connector:kill_switch.last()}=0) and (({Connector:prototype_sla[8].last()}&gt;0) or (({Connector:c_8.state.count(#5,UP,eq)} &lt; 5) and ({Connector:c_8.state.count(#5,EMPTY,&quot;eq&quot;)}=0))) or ({Connector:agent.ping.nodata(5m)}=1))</expression>
            <name>Connector08 Service Interruption</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Used for IT Services to track service interruptions.&#13;
&#13;
This trigger will watch all the conditions for a service interruption.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[1].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[1].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container01 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[2].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[2].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container02 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[3].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[3].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container03 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[4].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[4].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container04 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[5].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[5].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container05 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[6].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[6].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container06 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[7].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[7].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container07 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>({TRIGGER.VALUE}=0 and ({Connector:conn_eps_in.[8].count(#15,2000,&quot;gt&quot;)}=15)) or ({TRIGGER.VALUE}=1 and ({Connector:conn_eps_in.[8].count(#15,2000,&quot;gt&quot;)}&gt;0))</expression>
            <name>Container08 EPS &gt; 2k</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>(({Connector:c_1.state.str(MONITORING)}=1 or {Connector:c_1.state.str(RESTARTING)}=1 or {Connector:c_1.state.str(DOWN)}=1) and {Connector:c_1.state.nodata(5m)}=0) or ({Connector:c_1.process_count.last()}&lt;2 and {Connector:c_1.state.nodata(5m)}=0)</expression>
            <name>Forwarding Connector Agents Not Running</name>
            <url/>
            <status>1</status>
            <priority>4</priority>
            <description>Alerts us that the connector agetns on the forwarding connector are not running.</description>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Gateway Checks</name>
                    <expression>(({TRIGGER.VALUE}=0 and ({statistics_node:bouchard.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:bouchard.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:wynford.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:wynford.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:70QEB.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:70QEB.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:techno.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:techno.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:vancouver.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:vancouver.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:halifax.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:halifax.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15))) or &#13;
(({TRIGGER.VALUE}=0 and ({statistics_node:pharmacy.gateway.count(#2,DOWN,&quot;eq&quot;)}=2)) or ({TRIGGER.VALUE}=1 and ({statistics_node:pharmacy.gateway.count(#15,UP,&quot;eq&quot;)}&lt;15)))</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Connector:kill_switch.last()}=1</expression>
            <name>KILL SWITCH ON</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Alerts us that this node is currently NOT counting against our SLA numbers.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Connector:agent.prototype.sla.count(#1,PROBLEM)}=1</expression>
            <name>PROTOTYPE SLA: agents</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description>Used as the static trigger that will mirror the status of the high level trigger prototype SLA.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Connector:destination.prototype.sla.count(#1,PROBLEM)}=1</expression>
            <name>PROTOTYPE SLA: destinations</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description>Used as the static trigger that will mirror the status of the high level trigger prototype SLA.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>JVM_MEMORY</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>2</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Connector</host>
                        <key>c_1.jvm.mem</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
